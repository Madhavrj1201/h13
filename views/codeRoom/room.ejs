<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Code Room - <%= room.title %></title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.45.0/min/vs/editor/editor.main.css">
</head>
<body>
    <%- include('../partials/navbar') %>

    <div class="code-room">
        <div class="room-header">
            <h2><%= room.title %></h2>
            <div class="room-actions">
                <button class="btn btn-secondary" onclick="toggleChat()">Toggle Chat</button>
                <button class="btn btn-primary" onclick="runCode()">Run Code</button>
            </div>
        </div>

        <div class="room-layout">
            <!-- Code Editor -->
            <div class="editor-container">
                <div class="editor-header">
                    <select id="languageSelect" onchange="changeLanguage()">
                        <option value="javascript">JavaScript</option>
                        <option value="python">Python</option>
                        <option value="java">Java</option>
                        <option value="cpp">C++</option>
                    </select>
                </div>
                <div id="monaco-editor"></div>
            </div>

            <!-- Chat Panel -->
            <div class="chat-panel" id="chatPanel">
                <div class="chat-messages" id="chatMessages">
                    <% room.chat.forEach(message => { %>
                        <div class="chat-message <%= message.user._id === user._id ? 'own-message' : '' %>">
                            <div class="message-header">
                                <span class="message-author"><%= message.user.username %></span>
                                <span class="message-time"><%= new Date(message.timestamp).toLocaleTimeString() %></span>
                            </div>
                            <div class="message-content">
                                <% if (message.type === 'code') { %>
                                    <pre><code><%= message.message %></code></pre>
                                <% } else { %>
                                    <%= message.message %>
                                <% } %>
                            </div>
                        </div>
                    <% }) %>
                </div>
                <div class="chat-input">
                    <input type="text" id="messageInput" placeholder="Type a message...">
                    <button onclick="sendMessage()">Send</button>
                </div>
            </div>
        </div>

        <!-- Participants List -->
        <div class="participants-list">
            <h3>Participants</h3>
            <div class="participants">
                <% room.participants.forEach(participant => { %>
                    <div class="participant <%= participant.isActive ? 'active' : 'inactive' %>">
                        <span class="participant-name"><%= participant.user.username %></span>
                        <span class="participant-role"><%= participant.role %></span>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.45.0/min/vs/loader.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        let editor;
        const socket = io();
        const roomId = '<%= room._id %>';

        // Monaco Editor Setup
        require.config({ paths: { 'vs': 'https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.45.0/min/vs' }});
        require(['vs/editor/editor.main'], function() {
            editor = monaco.editor.create(document.getElementById('monaco-editor'), {
                value: '<%= room.code.content %>',
                language: '<%= room.code.language %>',
                theme: 'vs-dark',
                automaticLayout: true
            });

            editor.onDidChangeModelContent(() => {
                const content = editor.getValue();
                socket.emit('codeChange', { roomId, code: content });
            });
        });

        // Socket.IO Event Handlers
        socket.emit('joinRoom', roomId);

        socket.on('codeUpdate', (code) => {
            if (editor) {
                const position = editor.getPosition();
                editor.setValue(code);
                editor.setPosition(position);
            }
        });

        socket.on('message', (data) => {
            appendMessage(data);
        });

        // UI Functions
        function toggleChat() {
            const chatPanel = document.getElementById('chatPanel');
            chatPanel.classList.toggle('hidden');
        }

        function sendMessage() {
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            
            if (message) {
                socket.emit('chatMessage', {
                    roomId,
                    message,
                    user: {
                        id: '<%= user._id %>',
                        username: '<%= user.username %>'
                    }
                });
                input.value = '';
            }
        }

        function appendMessage(data) {
            const messagesDiv = document.getElementById('chatMessages');
            const messageDiv = document.createElement('div');
            messageDiv.className = `chat-message ${data.user.id === '<%= user._id %>' ? 'own-message' : ''}`;
            
            messageDiv.innerHTML = `
                <div class="message-header">
                    <span class="message-author">${data.user.username}</span>
                    <span class="message-time">${new Date(data.timestamp).toLocaleTimeString()}</span>
                </div>
                <div class="message-content">${data.message}</div>
            `;
            
            messagesDiv.appendChild(messageDiv);
            messagesDiv.scrollTop = messagesDiv.scrollHeight;
        }

        function changeLanguage() {
            const language = document.getElementById('languageSelect').value;
            monaco.editor.setModelLanguage(editor.getModel(), language);
        }

        // Handle Enter key in chat input
        document.getElementById('messageInput').addEventListener('keypress', (e) => {
            if (e.key === 'Enter') {
                sendMessage();
            }
        });
    </script>

    <style>
        .code-room {
            height: calc(100vh - 60px);
            display: flex;
            flex-direction: column;
            padding: 1rem;
        }

        .room-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .room-layout {
            display: flex;
            flex: 1;
            gap: 1rem;
        }

        .editor-container {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .editor-header {
            padding: 0.5rem;
            background: #1e1e1e;
        }

        #monaco-editor {
            flex: 1;
            border-radius: 4px;
            overflow: hidden;
        }

        .chat-panel {
            width: 300px;
            display: flex;
            flex-direction: column;
            background: white;
            border-radius: 4px;
        }

        .chat-panel.hidden {
            display: none;
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
        }

        .chat-message {
            margin-bottom: 1rem;
            padding: 0.5rem;
            border-radius: 4px;
            background: #f5f5f5;
        }

        .chat-message.own-message {
            background: #e3f2fd;
            margin-left: 2rem;
        }

        .message-header {
            display: flex;
            justify-content: space-between;
            font-size: 0.875rem;
            margin-bottom: 0.25rem;
        }

        .message-author {
            font-weight: bold;
        }

        .message-time {
            color: #666;
        }

        .chat-input {
            display: flex;
            padding: 0.5rem;
            border-top: 1px solid #eee;
        }

        .chat-input input {
            flex: 1;
            padding: 0.5rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-right: 0.5rem;
        }

        .participants-list {
            margin-top: 1rem;
            padding: 1rem;
            background: white;
            border-radius: 4px;
        }

        .participant {
            display: flex;
            justify-content: space-between;
            padding: 0.5rem;
            border-bottom: 1px solid #eee;
        }

        .participant.active {
            color: #4caf50;
        }

        .participant.inactive {
            color: #999;
        }

        .participant-role {
            font-size: 0.875rem;
            color: #666;
        }
    </style>
</body>
</html>